#include <iostream>
#include "raylib.h"
#include <vector>
#include <string>
#include <queue> // Для работы с очередями
#include <algorithm> // Для std::min

// 0 - 99 ландшафт
// 1 - невозможно пройти 
// 2 - спавнер
// 3 - база
// 100 - 199 - пулемётная башня
// 200 - 299 - ракетная башня
// 12 _ - клетки повышеной стоимости
const int rows = 13;
const int cols = 13;
const int cellSize = 40;
const int otstup = 5;
int i, j;
int cost = 0;
// уровни
const int matrix1[rows][cols] = {
    {1,1,1,1,1,1,2,1,1,1,1,1,1},
    {1,0,0,0,0,0,0,0,0,0,0,0,1},
    {1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1},
    {1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1},
    {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1},
    {1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1},
    {1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1},
    {1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1},
    {1, 1, 1, 1, 1, 1, 3, 1, 1, 1, 1, 1, 1}
};


void DrawMatrix(const int(&matrix)[rows][cols]) {
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            switch (matrix[i][j]) {
            case 1:
                DrawRectangle(j * (cellSize + otstup), i * (cellSize + otstup), cellSize, cellSize, DARKBLUE);
                break;
            case 2:
                DrawRectangle(j * (cellSize + otstup), i * (cellSize + otstup), cellSize, cellSize, RED);
                break;
            case 3:
                DrawRectangle(j * (cellSize + otstup), i * (cellSize + otstup), cellSize, cellSize, GREEN);
                break;
            default:
                DrawRectangle(j * (cellSize + otstup), i * (cellSize + otstup), cellSize, cellSize, WHITE);
                break;
            }
        }
    }
}




// игра
int main() {
    InitWindow(800, 600, "Game");
    SetTargetFPS(60);

    while (!WindowShouldClose()) {


        BeginDrawing();
        ClearBackground(DARKGRAY);
        DrawMatrix(matrix1);






        EndDrawing();
    }

    CloseWindow();
    return 0;
}
